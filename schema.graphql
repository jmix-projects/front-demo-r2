# This file was generated based on "Jmix model". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type AssociationM2MTestEntity {
    _instanceName: String
    datatypesTestEntities: [DatatypesTestEntity]
    id: UUID
    name: String
}

type AssociationM2OTestEntity {
    _instanceName: String
    id: UUID
    name: String
}

type AssociationO2MTestEntity {
    _instanceName: String
    datatypesTestEntity: DatatypesTestEntity
    id: UUID
    name: String
}

type AssociationO2OTestEntity {
    _instanceName: String
    datatypesTestEntity: DatatypesTestEntity
    deeplyNestedTestEntity: DeeplyNestedTestEntity
    id: UUID
    name: String
}

type CompositionO2MTestEntity {
    _instanceName: String
    datatypesTestEntity: DatatypesTestEntity
    id: UUID
    name: String
    quantity: Int
}

type CompositionO2OTestEntity {
    _instanceName: String
    id: UUID
    name: String
    nestedComposition: DeeplyNestedTestEntity
    quantity: Int
}

type Customer {
    _instanceName: String
    createdBy: String
    createdDate: DateTime
    deletedBy: String
    deletedDate: DateTime
    email: String
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    name: String
    version: Int
}

type DatatypesTestEntity {
    _instanceName: String
    associationM2Mattr: [AssociationM2MTestEntity]
    associationM2Oattr: AssociationM2OTestEntity
    associationO2Mattr: [AssociationO2MTestEntity]
    associationO2Oattr: AssociationO2OTestEntity
    bigDecimalAttr: BigDecimal
    booleanAttr: Boolean
    compositionO2Mattr: [CompositionO2MTestEntity]
    compositionO2Oattr: CompositionO2OTestEntity
    dateAttr: Date
    dateTimeAttr: DateTime
    doubleAttr: Float
    enumAttr: TestEnum
    id: UUID
    integerAttr: Int
    integerIdTestEntityAssociationM2MAttr: [IntegerIdTestEntity]
    localDateAttr: LocalDate
    localDateTimeAttr: LocalDateTime
    localTimeAttr: LocalTime
    longAttr: Long
    name: String
    offsetDateTimeAttr: OffsetDateTime
    offsetTimeAttr: OffsetTime
    stringAttr: String
    stringIdTestEntityAssociationM2O: StringIdTestEntity
    stringIdTestEntityAssociationO2O: StringIdTestEntity
    timeAttr: Time
    uuidAttr: UUID
}

type DeeplyNestedTestEntity {
    _instanceName: String
    associationO2Oattr: AssociationO2OTestEntity
    id: UUID
    name: String
}

type IntegerIdTestEntity {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: Int
    updateTs: DateTime
    updatedBy: String
    version: Int
}

"Mutation root"
type Mutation {
    delete_AssociationM2MTestEntity(id: String!): Void
    delete_AssociationM2OTestEntity(id: String!): Void
    delete_AssociationO2MTestEntity(id: String!): Void
    delete_AssociationO2OTestEntity(id: String!): Void
    delete_CompositionO2MTestEntity(id: String!): Void
    delete_CompositionO2OTestEntity(id: String!): Void
    delete_Customer(id: String!): Void
    delete_DatatypesTestEntity(id: String!): Void
    delete_DeeplyNestedTestEntity(id: String!): Void
    delete_IntegerIdTestEntity(id: String!): Void
    delete_OrderLine(id: String!): Void
    delete_Order_(id: String!): Void
    delete_Product(id: String!): Void
    delete_StringIdTestEntity(id: String!): Void
    delete_User(id: String!): Void
    delete_audit_EntityLog(id: String!): Void
    delete_audit_EntitySnapshot(id: String!): Void
    delete_audit_LoggedAttribute(id: String!): Void
    delete_audit_LoggedEntity(id: String!): Void
    delete_sec_ResourcePolicyEntity(id: String!): Void
    delete_sec_ResourceRoleEntity(id: String!): Void
    delete_sec_RoleAssignmentEntity(id: String!): Void
    delete_sec_RowLevelPolicyEntity(id: String!): Void
    delete_sec_RowLevelRoleEntity(id: String!): Void
    delete_sec_UserSubstitutionEntity(id: String!): Void
    delete_ui_FilterConfiguration(id: String!): Void
    delete_ui_Setting(id: String!): Void
    delete_ui_TablePresentation(id: String!): Void
    delete_umgmt_EntityAttributePolicy(id: String!): Void
    delete_umgmt_EntityPolicy(id: String!): Void
    delete_umgmt_MenuPolicy(id: String!): Void
    delete_umgmt_ResourceRole(id: String!): Void
    delete_umgmt_RowLevelPolicy(id: String!): Void
    delete_umgmt_RowLevelRole(id: String!): Void
    delete_umgmt_ScreenPolicy(id: String!): Void
    delete_umgmt_SpecificPolicy(id: String!): Void
    delete_umgmt_User(id: String!): Void
    delete_umgmt_UserRoleAssignments(id: String!): Void
    delete_umgmt_UserSession(id: String!): Void
    upsert_AssociationM2MTestEntity(associationM2MTestEntity: inp_AssociationM2MTestEntity!): AssociationM2MTestEntity
    upsert_AssociationM2OTestEntity(associationM2OTestEntity: inp_AssociationM2OTestEntity!): AssociationM2OTestEntity
    upsert_AssociationO2MTestEntity(associationO2MTestEntity: inp_AssociationO2MTestEntity!): AssociationO2MTestEntity
    upsert_AssociationO2OTestEntity(associationO2OTestEntity: inp_AssociationO2OTestEntity!): AssociationO2OTestEntity
    upsert_CompositionO2MTestEntity(compositionO2MTestEntity: inp_CompositionO2MTestEntity!): CompositionO2MTestEntity
    upsert_CompositionO2OTestEntity(compositionO2OTestEntity: inp_CompositionO2OTestEntity!): CompositionO2OTestEntity
    upsert_Customer(customer: inp_Customer!): Customer
    upsert_DatatypesTestEntity(datatypesTestEntity: inp_DatatypesTestEntity!): DatatypesTestEntity
    upsert_DeeplyNestedTestEntity(deeplyNestedTestEntity: inp_DeeplyNestedTestEntity!): DeeplyNestedTestEntity
    upsert_IntegerIdTestEntity(integerIdTestEntity: inp_IntegerIdTestEntity!): IntegerIdTestEntity
    upsert_OrderLine(orderLine: inp_OrderLine!): OrderLine
    upsert_Order_(order: inp_Order_!): Order_
    upsert_Product(product: inp_Product!): Product
    upsert_StringIdTestEntity(stringIdTestEntity: inp_StringIdTestEntity!): StringIdTestEntity
    upsert_User(user: inp_User!): User
    upsert_audit_EntityLog(entityLogItem: inp_audit_EntityLog!): audit_EntityLog
    upsert_audit_EntitySnapshot(entitySnapshot: inp_audit_EntitySnapshot!): audit_EntitySnapshot
    upsert_audit_LoggedAttribute(loggedAttribute: inp_audit_LoggedAttribute!): audit_LoggedAttribute
    upsert_audit_LoggedEntity(loggedEntity: inp_audit_LoggedEntity!): audit_LoggedEntity
    upsert_sec_ResourcePolicyEntity(resourcePolicyEntity: inp_sec_ResourcePolicyEntity!): sec_ResourcePolicyEntity
    upsert_sec_ResourceRoleEntity(resourceRoleEntity: inp_sec_ResourceRoleEntity!): sec_ResourceRoleEntity
    upsert_sec_RoleAssignmentEntity(roleAssignmentEntity: inp_sec_RoleAssignmentEntity!): sec_RoleAssignmentEntity
    upsert_sec_RowLevelPolicyEntity(rowLevelPolicyEntity: inp_sec_RowLevelPolicyEntity!): sec_RowLevelPolicyEntity
    upsert_sec_RowLevelRoleEntity(rowLevelRoleEntity: inp_sec_RowLevelRoleEntity!): sec_RowLevelRoleEntity
    upsert_sec_UserSubstitutionEntity(userSubstitutionEntity: inp_sec_UserSubstitutionEntity!): sec_UserSubstitutionEntity
    upsert_ui_FilterConfiguration(filterConfiguration: inp_ui_FilterConfiguration!): ui_FilterConfiguration
    upsert_ui_Setting(uiSetting: inp_ui_Setting!): ui_Setting
    upsert_ui_TablePresentation(uiTablePresentation: inp_ui_TablePresentation!): ui_TablePresentation
    upsert_umgmt_EntityAttributePolicy(entityAttributePolicy: inp_umgmt_EntityAttributePolicy!): umgmt_EntityAttributePolicy
    upsert_umgmt_EntityPolicy(entityPolicy: inp_umgmt_EntityPolicy!): umgmt_EntityPolicy
    upsert_umgmt_MenuPolicy(menuPolicy: inp_umgmt_MenuPolicy!): umgmt_MenuPolicy
    upsert_umgmt_ResourceRole(resourceRole: inp_umgmt_ResourceRole!): umgmt_ResourceRole
    upsert_umgmt_RowLevelPolicy(rowLevelPolicy: inp_umgmt_RowLevelPolicy!): umgmt_RowLevelPolicy
    upsert_umgmt_RowLevelRole(rowLevelRole: inp_umgmt_RowLevelRole!): umgmt_RowLevelRole
    upsert_umgmt_ScreenPolicy(screenPolicy: inp_umgmt_ScreenPolicy!): umgmt_ScreenPolicy
    upsert_umgmt_SpecificPolicy(specificPolicy: inp_umgmt_SpecificPolicy!): umgmt_SpecificPolicy
    upsert_umgmt_User(user: inp_umgmt_User!): umgmt_User
    upsert_umgmt_UserRoleAssignments(userRoleAssignments: inp_umgmt_UserRoleAssignments!): umgmt_UserRoleAssignments
    upsert_umgmt_UserSession(userSession: inp_umgmt_UserSession!): umgmt_UserSession
}

type OrderLine {
    _instanceName: String
    createdBy: String
    createdDate: DateTime
    deletedBy: String
    deletedDate: DateTime
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    order: Order_
    product: Product
    quantity: Int
    version: Int
}

type Order_ {
    _instanceName: String
    amount: BigDecimal
    createdBy: String
    createdDate: DateTime
    customer: Customer
    date: Date
    deletedBy: String
    deletedDate: DateTime
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    lines: [OrderLine]
    number: String
    numberOfSpecialProducts: Int
    version: Int
}

type Product {
    _instanceName: String
    createdBy: String
    createdDate: DateTime
    deletedBy: String
    deletedDate: DateTime
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    name: String
    price: BigDecimal
    special: Boolean
    version: Int
}

"Query root"
type Query {
    AssociationM2MTestEntityById(id: String!): AssociationM2MTestEntity
    AssociationM2MTestEntityCount(
        "expressions to compare AssociationM2MTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationM2MTestEntityFilterCondition]
    ): Long
    AssociationM2MTestEntityList(
        "expressions to compare AssociationM2MTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationM2MTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_AssociationM2MTestEntityOrderBy
    ): [AssociationM2MTestEntity]
    AssociationM2OTestEntityById(id: String!): AssociationM2OTestEntity
    AssociationM2OTestEntityCount(
        "expressions to compare AssociationM2OTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationM2OTestEntityFilterCondition]
    ): Long
    AssociationM2OTestEntityList(
        "expressions to compare AssociationM2OTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationM2OTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_AssociationM2OTestEntityOrderBy
    ): [AssociationM2OTestEntity]
    AssociationO2MTestEntityById(id: String!): AssociationO2MTestEntity
    AssociationO2MTestEntityCount(
        "expressions to compare AssociationO2MTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationO2MTestEntityFilterCondition]
    ): Long
    AssociationO2MTestEntityList(
        "expressions to compare AssociationO2MTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationO2MTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_AssociationO2MTestEntityOrderBy
    ): [AssociationO2MTestEntity]
    AssociationO2OTestEntityById(id: String!): AssociationO2OTestEntity
    AssociationO2OTestEntityCount(
        "expressions to compare AssociationO2OTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationO2OTestEntityFilterCondition]
    ): Long
    AssociationO2OTestEntityList(
        "expressions to compare AssociationO2OTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_AssociationO2OTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_AssociationO2OTestEntityOrderBy
    ): [AssociationO2OTestEntity]
    CompositionO2MTestEntityById(id: String!): CompositionO2MTestEntity
    CompositionO2MTestEntityCount(
        "expressions to compare CompositionO2MTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_CompositionO2MTestEntityFilterCondition]
    ): Long
    CompositionO2MTestEntityList(
        "expressions to compare CompositionO2MTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_CompositionO2MTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_CompositionO2MTestEntityOrderBy
    ): [CompositionO2MTestEntity]
    CompositionO2OTestEntityById(id: String!): CompositionO2OTestEntity
    CompositionO2OTestEntityCount(
        "expressions to compare CompositionO2OTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_CompositionO2OTestEntityFilterCondition]
    ): Long
    CompositionO2OTestEntityList(
        "expressions to compare CompositionO2OTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_CompositionO2OTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_CompositionO2OTestEntityOrderBy
    ): [CompositionO2OTestEntity]
    CustomerById(id: String!): Customer
    CustomerCount(
        "expressions to compare Customer objects, all items are combined with logical 'AND'"
        filter: [inp_CustomerFilterCondition]
    ): Long
    CustomerList(
        "expressions to compare Customer objects, all items are combined with logical 'AND'"
        filter: [inp_CustomerFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_CustomerOrderBy
    ): [Customer]
    DatatypesTestEntityById(id: String!): DatatypesTestEntity
    DatatypesTestEntityCount(
        "expressions to compare DatatypesTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_DatatypesTestEntityFilterCondition]
    ): Long
    DatatypesTestEntityList(
        "expressions to compare DatatypesTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_DatatypesTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_DatatypesTestEntityOrderBy
    ): [DatatypesTestEntity]
    DeeplyNestedTestEntityById(id: String!): DeeplyNestedTestEntity
    DeeplyNestedTestEntityCount(
        "expressions to compare DeeplyNestedTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_DeeplyNestedTestEntityFilterCondition]
    ): Long
    DeeplyNestedTestEntityList(
        "expressions to compare DeeplyNestedTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_DeeplyNestedTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_DeeplyNestedTestEntityOrderBy
    ): [DeeplyNestedTestEntity]
    IntegerIdTestEntityById(id: String!): IntegerIdTestEntity
    IntegerIdTestEntityCount(
        "expressions to compare IntegerIdTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_IntegerIdTestEntityFilterCondition]
    ): Long
    IntegerIdTestEntityList(
        "expressions to compare IntegerIdTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_IntegerIdTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_IntegerIdTestEntityOrderBy
    ): [IntegerIdTestEntity]
    OrderLineById(id: String!): OrderLine
    OrderLineCount(
        "expressions to compare OrderLine objects, all items are combined with logical 'AND'"
        filter: [inp_OrderLineFilterCondition]
    ): Long
    OrderLineList(
        "expressions to compare OrderLine objects, all items are combined with logical 'AND'"
        filter: [inp_OrderLineFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_OrderLineOrderBy
    ): [OrderLine]
    Order_ById(id: String!): Order_
    Order_Count(
        "expressions to compare Order_ objects, all items are combined with logical 'AND'"
        filter: [inp_Order_FilterCondition]
    ): Long
    Order_List(
        "expressions to compare Order_ objects, all items are combined with logical 'AND'"
        filter: [inp_Order_FilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_Order_OrderBy
    ): [Order_]
    ProductById(id: String!): Product
    ProductCount(
        "expressions to compare Product objects, all items are combined with logical 'AND'"
        filter: [inp_ProductFilterCondition]
    ): Long
    ProductList(
        "expressions to compare Product objects, all items are combined with logical 'AND'"
        filter: [inp_ProductFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_ProductOrderBy
    ): [Product]
    StringIdTestEntityById(id: String!): StringIdTestEntity
    StringIdTestEntityCount(
        "expressions to compare StringIdTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_StringIdTestEntityFilterCondition]
    ): Long
    StringIdTestEntityList(
        "expressions to compare StringIdTestEntity objects, all items are combined with logical 'AND'"
        filter: [inp_StringIdTestEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_StringIdTestEntityOrderBy
    ): [StringIdTestEntity]
    UserById(id: String!): User
    UserCount(
        "expressions to compare User objects, all items are combined with logical 'AND'"
        filter: [inp_UserFilterCondition]
    ): Long
    UserList(
        "expressions to compare User objects, all items are combined with logical 'AND'"
        filter: [inp_UserFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_UserOrderBy
    ): [User]
    audit_EntityLogById(id: String!): audit_EntityLog
    audit_EntityLogCount(
        "expressions to compare audit_EntityLog objects, all items are combined with logical 'AND'"
        filter: [inp_audit_EntityLogFilterCondition]
    ): Long
    audit_EntityLogList(
        "expressions to compare audit_EntityLog objects, all items are combined with logical 'AND'"
        filter: [inp_audit_EntityLogFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_audit_EntityLogOrderBy
    ): [audit_EntityLog]
    audit_EntitySnapshotById(id: String!): audit_EntitySnapshot
    audit_EntitySnapshotCount(
        "expressions to compare audit_EntitySnapshot objects, all items are combined with logical 'AND'"
        filter: [inp_audit_EntitySnapshotFilterCondition]
    ): Long
    audit_EntitySnapshotList(
        "expressions to compare audit_EntitySnapshot objects, all items are combined with logical 'AND'"
        filter: [inp_audit_EntitySnapshotFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_audit_EntitySnapshotOrderBy
    ): [audit_EntitySnapshot]
    audit_LoggedAttributeById(id: String!): audit_LoggedAttribute
    audit_LoggedAttributeCount(
        "expressions to compare audit_LoggedAttribute objects, all items are combined with logical 'AND'"
        filter: [inp_audit_LoggedAttributeFilterCondition]
    ): Long
    audit_LoggedAttributeList(
        "expressions to compare audit_LoggedAttribute objects, all items are combined with logical 'AND'"
        filter: [inp_audit_LoggedAttributeFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_audit_LoggedAttributeOrderBy
    ): [audit_LoggedAttribute]
    audit_LoggedEntityById(id: String!): audit_LoggedEntity
    audit_LoggedEntityCount(
        "expressions to compare audit_LoggedEntity objects, all items are combined with logical 'AND'"
        filter: [inp_audit_LoggedEntityFilterCondition]
    ): Long
    audit_LoggedEntityList(
        "expressions to compare audit_LoggedEntity objects, all items are combined with logical 'AND'"
        filter: [inp_audit_LoggedEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_audit_LoggedEntityOrderBy
    ): [audit_LoggedEntity]
    entityMessages(className: String, locale: String): [gql_MessageDetail]
    enumMessages(className: String, locale: String): [gql_MessageDetail]
    permissions: sec_PermissionConfig
    sec_ResourcePolicyEntityById(id: String!): sec_ResourcePolicyEntity
    sec_ResourcePolicyEntityCount(
        "expressions to compare sec_ResourcePolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourcePolicyEntityFilterCondition]
    ): Long
    sec_ResourcePolicyEntityList(
        "expressions to compare sec_ResourcePolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourcePolicyEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_ResourcePolicyEntityOrderBy
    ): [sec_ResourcePolicyEntity]
    sec_ResourceRoleEntityById(id: String!): sec_ResourceRoleEntity
    sec_ResourceRoleEntityCount(
        "expressions to compare sec_ResourceRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourceRoleEntityFilterCondition]
    ): Long
    sec_ResourceRoleEntityList(
        "expressions to compare sec_ResourceRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_ResourceRoleEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_ResourceRoleEntityOrderBy
    ): [sec_ResourceRoleEntity]
    sec_RoleAssignmentEntityById(id: String!): sec_RoleAssignmentEntity
    sec_RoleAssignmentEntityCount(
        "expressions to compare sec_RoleAssignmentEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RoleAssignmentEntityFilterCondition]
    ): Long
    sec_RoleAssignmentEntityList(
        "expressions to compare sec_RoleAssignmentEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RoleAssignmentEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_RoleAssignmentEntityOrderBy
    ): [sec_RoleAssignmentEntity]
    sec_RowLevelPolicyEntityById(id: String!): sec_RowLevelPolicyEntity
    sec_RowLevelPolicyEntityCount(
        "expressions to compare sec_RowLevelPolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelPolicyEntityFilterCondition]
    ): Long
    sec_RowLevelPolicyEntityList(
        "expressions to compare sec_RowLevelPolicyEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelPolicyEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_RowLevelPolicyEntityOrderBy
    ): [sec_RowLevelPolicyEntity]
    sec_RowLevelRoleEntityById(id: String!): sec_RowLevelRoleEntity
    sec_RowLevelRoleEntityCount(
        "expressions to compare sec_RowLevelRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelRoleEntityFilterCondition]
    ): Long
    sec_RowLevelRoleEntityList(
        "expressions to compare sec_RowLevelRoleEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_RowLevelRoleEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_RowLevelRoleEntityOrderBy
    ): [sec_RowLevelRoleEntity]
    sec_UserSubstitutionEntityById(id: String!): sec_UserSubstitutionEntity
    sec_UserSubstitutionEntityCount(
        "expressions to compare sec_UserSubstitutionEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_UserSubstitutionEntityFilterCondition]
    ): Long
    sec_UserSubstitutionEntityList(
        "expressions to compare sec_UserSubstitutionEntity objects, all items are combined with logical 'AND'"
        filter: [inp_sec_UserSubstitutionEntityFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_sec_UserSubstitutionEntityOrderBy
    ): [sec_UserSubstitutionEntity]
    ui_FilterConfigurationById(id: String!): ui_FilterConfiguration
    ui_FilterConfigurationCount(
        "expressions to compare ui_FilterConfiguration objects, all items are combined with logical 'AND'"
        filter: [inp_ui_FilterConfigurationFilterCondition]
    ): Long
    ui_FilterConfigurationList(
        "expressions to compare ui_FilterConfiguration objects, all items are combined with logical 'AND'"
        filter: [inp_ui_FilterConfigurationFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_ui_FilterConfigurationOrderBy
    ): [ui_FilterConfiguration]
    ui_SettingById(id: String!): ui_Setting
    ui_SettingCount(
        "expressions to compare ui_Setting objects, all items are combined with logical 'AND'"
        filter: [inp_ui_SettingFilterCondition]
    ): Long
    ui_SettingList(
        "expressions to compare ui_Setting objects, all items are combined with logical 'AND'"
        filter: [inp_ui_SettingFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_ui_SettingOrderBy
    ): [ui_Setting]
    ui_TablePresentationById(id: String!): ui_TablePresentation
    ui_TablePresentationCount(
        "expressions to compare ui_TablePresentation objects, all items are combined with logical 'AND'"
        filter: [inp_ui_TablePresentationFilterCondition]
    ): Long
    ui_TablePresentationList(
        "expressions to compare ui_TablePresentation objects, all items are combined with logical 'AND'"
        filter: [inp_ui_TablePresentationFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_ui_TablePresentationOrderBy
    ): [ui_TablePresentation]
    umgmt_EntityAttributePolicyById(id: String!): umgmt_EntityAttributePolicy
    umgmt_EntityAttributePolicyCount(
        "expressions to compare umgmt_EntityAttributePolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityAttributePolicyFilterCondition]
    ): Long
    umgmt_EntityAttributePolicyList(
        "expressions to compare umgmt_EntityAttributePolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityAttributePolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_EntityAttributePolicyOrderBy
    ): [umgmt_EntityAttributePolicy]
    umgmt_EntityPolicyById(id: String!): umgmt_EntityPolicy
    umgmt_EntityPolicyCount(
        "expressions to compare umgmt_EntityPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityPolicyFilterCondition]
    ): Long
    umgmt_EntityPolicyList(
        "expressions to compare umgmt_EntityPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_EntityPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_EntityPolicyOrderBy
    ): [umgmt_EntityPolicy]
    umgmt_MenuPolicyById(id: String!): umgmt_MenuPolicy
    umgmt_MenuPolicyCount(
        "expressions to compare umgmt_MenuPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_MenuPolicyFilterCondition]
    ): Long
    umgmt_MenuPolicyList(
        "expressions to compare umgmt_MenuPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_MenuPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_MenuPolicyOrderBy
    ): [umgmt_MenuPolicy]
    umgmt_ResourceRoleById(id: String!): umgmt_ResourceRole
    umgmt_ResourceRoleCount(
        "expressions to compare umgmt_ResourceRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ResourceRoleFilterCondition]
    ): Long
    umgmt_ResourceRoleList(
        "expressions to compare umgmt_ResourceRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ResourceRoleFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_ResourceRoleOrderBy
    ): [umgmt_ResourceRole]
    umgmt_RowLevelPolicyById(id: String!): umgmt_RowLevelPolicy
    umgmt_RowLevelPolicyCount(
        "expressions to compare umgmt_RowLevelPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelPolicyFilterCondition]
    ): Long
    umgmt_RowLevelPolicyList(
        "expressions to compare umgmt_RowLevelPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_RowLevelPolicyOrderBy
    ): [umgmt_RowLevelPolicy]
    umgmt_RowLevelRoleById(id: String!): umgmt_RowLevelRole
    umgmt_RowLevelRoleCount(
        "expressions to compare umgmt_RowLevelRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelRoleFilterCondition]
    ): Long
    umgmt_RowLevelRoleList(
        "expressions to compare umgmt_RowLevelRole objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_RowLevelRoleFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_RowLevelRoleOrderBy
    ): [umgmt_RowLevelRole]
    umgmt_ScreenPolicyById(id: String!): umgmt_ScreenPolicy
    umgmt_ScreenPolicyCount(
        "expressions to compare umgmt_ScreenPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ScreenPolicyFilterCondition]
    ): Long
    umgmt_ScreenPolicyList(
        "expressions to compare umgmt_ScreenPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_ScreenPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_ScreenPolicyOrderBy
    ): [umgmt_ScreenPolicy]
    umgmt_SpecificPolicyById(id: String!): umgmt_SpecificPolicy
    umgmt_SpecificPolicyCount(
        "expressions to compare umgmt_SpecificPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_SpecificPolicyFilterCondition]
    ): Long
    umgmt_SpecificPolicyList(
        "expressions to compare umgmt_SpecificPolicy objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_SpecificPolicyFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_SpecificPolicyOrderBy
    ): [umgmt_SpecificPolicy]
    umgmt_UserById(id: String!): umgmt_User
    umgmt_UserCount(
        "expressions to compare umgmt_User objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserFilterCondition]
    ): Long
    umgmt_UserList(
        "expressions to compare umgmt_User objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_UserOrderBy
    ): [umgmt_User]
    umgmt_UserRoleAssignmentsById(id: String!): umgmt_UserRoleAssignments
    umgmt_UserRoleAssignmentsCount(
        "expressions to compare umgmt_UserRoleAssignments objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserRoleAssignmentsFilterCondition]
    ): Long
    umgmt_UserRoleAssignmentsList(
        "expressions to compare umgmt_UserRoleAssignments objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserRoleAssignmentsFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_UserRoleAssignmentsOrderBy
    ): [umgmt_UserRoleAssignments]
    umgmt_UserSessionById(id: String!): umgmt_UserSession
    umgmt_UserSessionCount(
        "expressions to compare umgmt_UserSession objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserSessionFilterCondition]
    ): Long
    umgmt_UserSessionList(
        "expressions to compare umgmt_UserSession objects, all items are combined with logical 'AND'"
        filter: [inp_umgmt_UserSessionFilterCondition],
        "limit the number of items returned"
        limit: Int,
        "skip the first n items"
        offset: Int,
        "sort the items by one or more fields"
        orderBy: inp_umgmt_UserSessionOrderBy
    ): [umgmt_UserSession]
}

type StringIdTestEntity {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    identifier: String
    productCode: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

type User {
    _instanceName: String
    email: String
    enabled: Boolean
    firstName: String
    id: UUID
    lastName: String
    password: String
    username: String
    version: Int
}

type audit_EntityLog {
    _instanceName: String
    attributes: [String]
    changes: String
    createTs: DateTime
    createdBy: String
    entity: String
    entityInstanceName: String
    entityRef: String
    eventTs: DateTime
    id: UUID
    sysTenantId: String
    type: Type
    username: String
}

type audit_EntitySnapshot {
    _instanceName: String
    authorUsername: String
    createdBy: String
    createdDate: DateTime
    entity: String
    entityMetaClass: String
    fetchPlanXml: String
    id: UUID
    snapshotDate: DateTime
    snapshotXml: String
    sysTenantId: String
}

type audit_LoggedAttribute {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    entity: audit_LoggedEntity
    id: UUID
    name: String
}

type audit_LoggedEntity {
    _instanceName: String
    attributes: [audit_LoggedAttribute]
    auto: Boolean
    createTs: DateTime
    createdBy: String
    id: UUID
    manual: Boolean
    name: String
}

type gql_MessageDetail {
    key: String
    value: String
}

type sec_Permission {
    target: String
    value: Int
}

type sec_PermissionConfig {
    entities: [sec_Permission]
    entityAttributes: [sec_Permission]
    specifics: [sec_Permission]
}

type sec_ResourcePolicyEntity {
    _instanceName: String
    action: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    effect: String
    id: UUID
    policyGroup: String
    resource: String
    role: sec_ResourceRoleEntity
    type: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

type sec_ResourceRoleEntity {
    _instanceName: String
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    resourcePolicies: [sec_ResourcePolicyEntity]
    scopes: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

type sec_RoleAssignmentEntity {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    id: UUID
    roleCode: String
    roleType: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

type sec_RowLevelPolicyEntity {
    _instanceName: String
    action: RowLevelPolicyAction
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    entityName: String
    id: UUID
    joinClause: String
    role: sec_RowLevelRoleEntity
    script: String
    type: RowLevelPolicyType
    updateTs: DateTime
    updatedBy: String
    version: Int
    whereClause: String
}

type sec_RowLevelRoleEntity {
    _instanceName: String
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    rowLevelPolicies: [sec_RowLevelPolicyEntity]
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

type sec_UserSubstitutionEntity {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    endDate: Date
    id: UUID
    startDate: Date
    substitutedUsername: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

type ui_FilterConfiguration {
    _instanceName: String
    componentId: String
    configurationId: String
    defaultForAll: Boolean
    defaultForMe: Boolean
    id: UUID
    name: String
    rootCondition: String
    sysTenantId: String
    username: String
}

type ui_Setting {
    _instanceName: String
    createTs: DateTime
    createdBy: String
    id: UUID
    name: String
    username: String
    value: String
}

type ui_TablePresentation {
    _instanceName: String
    autoSave: Boolean
    componentId: String
    createTs: DateTime
    createdBy: String
    id: UUID
    isDefault: Boolean
    name: String
    settings: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    username: String
}

type umgmt_EntityAttributePolicy {
    _instanceName: String
    action: AttributePolicyType
    attribute: String
    entityName: String
    id: UUID
    readOnly: Boolean
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_EntityPolicy {
    _instanceName: String
    action: EntityPolicyType
    entityName: String
    id: UUID
    readOnly: Boolean
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_MenuPolicy {
    _instanceName: String
    id: UUID
    readOnly: Boolean
    resource: String
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_ResourceRole {
    _instanceName: String
    childRoles: String
    code: String
    description: String
    entityAttributePolicies: [umgmt_EntityAttributePolicy]
    entityPolicies: [umgmt_EntityPolicy]
    id: String
    menuPolicies: [umgmt_MenuPolicy]
    name: String
    readOnly: Boolean
    scopes: String
    screenPolicies: [umgmt_ScreenPolicy]
    specificPolicies: [umgmt_SpecificPolicy]
    version: Int
}

type umgmt_RowLevelPolicy {
    _instanceName: String
    action: RowLevelAction
    entityName: String
    id: UUID
    joinClause: String
    readOnly: Boolean
    role: umgmt_RowLevelRole
    script: String
    type: RowLevelType
    version: Int
    whereClause: String
}

type umgmt_RowLevelRole {
    _instanceName: String
    childRoles: String
    code: String
    description: String
    id: String
    name: String
    readOnly: Boolean
    rowLevelPolicies: [umgmt_RowLevelPolicy]
    version: Int
}

type umgmt_ScreenPolicy {
    _instanceName: String
    id: UUID
    readOnly: Boolean
    resource: String
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_SpecificPolicy {
    _instanceName: String
    id: UUID
    readOnly: Boolean
    resource: String
    role: umgmt_ResourceRole
    version: Int
}

type umgmt_User {
    _instanceName: String
    active: Boolean
    email: String
    firstName: String
    id: UUID
    lastName: String
    password: String
    timeZoneId: String
    username: String
    version: Int
}

type umgmt_UserRoleAssignments {
    _instanceName: String
    id: String
    resourceRoles: [umgmt_ResourceRole]
    rowLevelRoles: [umgmt_RowLevelRole]
}

type umgmt_UserSession {
    _instanceName: String
    id: String
    lastRequest: DateTime
    username: String
}

enum AttributePolicyType {
    MODIFY
    VIEW
}

enum EntityPolicyType {
    CREATE
    DELETE
    READ
    UPDATE
}

enum RowLevelAction {
    CREATE
    DELETE
    READ
    UPDATE
}

enum RowLevelPolicyAction {
    CREATE
    DELETE
    READ
    UPDATE
}

enum RowLevelPolicyType {
    JPQL
    PREDICATE
}

enum RowLevelType {
    JPQL
    PREDICATE
}

enum SortOrder {
    ASC
    DESC
}

enum TestEnum {
    NEW_VALUE
    NEW_VALUE1
    NEW_VALUE2
}

enum Type

"BigDecimal"
scalar BigDecimal

"BigInteger"
scalar BigInteger

"Byte"
scalar Byte

"Char"
scalar Char

"Date"
scalar Date

"DateTime"
scalar DateTime

"LocalDate"
scalar LocalDate

"LocalDateTime"
scalar LocalDateTime

"LocalTime"
scalar LocalTime

"Long"
scalar Long

"OffsetDateTime"
scalar OffsetDateTime

"OffsetTime"
scalar OffsetTime

"Short"
scalar Short

"Time"
scalar Time

"UUID"
scalar UUID

"Void"
scalar Void

input inp_AssociationM2MTestEntity {
    datatypesTestEntities: [inp_DatatypesTestEntity]
    id: UUID
    name: String
}

input inp_AssociationM2MTestEntityFilterCondition {
    AND: [inp_AssociationM2MTestEntityFilterCondition]
    OR: [inp_AssociationM2MTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
}

input inp_AssociationM2MTestEntityOrderBy {
    id: SortOrder
    name: [SortOrder]
}

input inp_AssociationM2OTestEntity {
    id: UUID
    name: String
}

input inp_AssociationM2OTestEntityFilterCondition {
    AND: [inp_AssociationM2OTestEntityFilterCondition]
    OR: [inp_AssociationM2OTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
}

input inp_AssociationM2OTestEntityOrderBy {
    id: SortOrder
    name: [SortOrder]
}

input inp_AssociationO2MTestEntity {
    datatypesTestEntity: inp_DatatypesTestEntity
    id: UUID
    name: String
}

input inp_AssociationO2MTestEntityFilterCondition {
    AND: [inp_AssociationO2MTestEntityFilterCondition]
    OR: [inp_AssociationO2MTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    datatypesTestEntity: [inp_DatatypesTestEntityFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
}

input inp_AssociationO2MTestEntityOrderBy {
    datatypesTestEntity: inp_DatatypesTestEntityOrderBy
    id: SortOrder
    name: [SortOrder]
}

input inp_AssociationO2OTestEntity {
    datatypesTestEntity: inp_DatatypesTestEntity
    deeplyNestedTestEntity: inp_DeeplyNestedTestEntity
    id: UUID
    name: String
}

input inp_AssociationO2OTestEntityFilterCondition {
    AND: [inp_AssociationO2OTestEntityFilterCondition]
    OR: [inp_AssociationO2OTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    datatypesTestEntity: [inp_DatatypesTestEntityFilterCondition]
    deeplyNestedTestEntity: [inp_DeeplyNestedTestEntityFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
}

input inp_AssociationO2OTestEntityOrderBy {
    datatypesTestEntity: inp_DatatypesTestEntityOrderBy
    deeplyNestedTestEntity: inp_DeeplyNestedTestEntityOrderBy
    id: SortOrder
    name: [SortOrder]
}

"expression to compare columns of type BigDecimal. All fields are combined with logical 'AND'"
input inp_BigDecimalFilterCondition {
    "equals"
    _eq: BigDecimal
    "greater than"
    _gt: BigDecimal
    "greater than or equals"
    _gte: BigDecimal
    "in list"
    _in: [BigDecimal]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: BigDecimal
    "less than or equals"
    _lte: BigDecimal
    "not equals"
    _neq: BigDecimal
    "not in list"
    _notIn: [BigDecimal]
}

"expression to compare columns of type BigInteger. All fields are combined with logical 'AND'"
input inp_BigIntegerFilterCondition {
    "equals"
    _eq: BigInteger
    "greater than"
    _gt: BigInteger
    "greater than or equals"
    _gte: BigInteger
    "in list"
    _in: [BigInteger]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: BigInteger
    "less than or equals"
    _lte: BigInteger
    "not equals"
    _neq: BigInteger
    "not in list"
    _notIn: [BigInteger]
}

"expression to compare columns of type Boolean. All fields are combined with logical 'AND'"
input inp_BooleanFilterCondition {
    "equals"
    _eq: Boolean
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: Boolean
}

"expression to compare columns of type Char. All fields are combined with logical 'AND'"
input inp_CharFilterCondition {
    "equals"
    _eq: Char
    "in list"
    _in: [Char]
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: Char
    "not in list"
    _notIn: [Char]
}

input inp_CompositionO2MTestEntity {
    datatypesTestEntity: inp_DatatypesTestEntity
    id: UUID
    name: String
    quantity: Int
}

input inp_CompositionO2MTestEntityFilterCondition {
    AND: [inp_CompositionO2MTestEntityFilterCondition]
    OR: [inp_CompositionO2MTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    datatypesTestEntity: [inp_DatatypesTestEntityFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    quantity: [inp_IntFilterCondition]
}

input inp_CompositionO2MTestEntityOrderBy {
    datatypesTestEntity: inp_DatatypesTestEntityOrderBy
    id: SortOrder
    name: [SortOrder]
    quantity: SortOrder
}

input inp_CompositionO2OTestEntity {
    id: UUID
    name: String
    nestedComposition: inp_DeeplyNestedTestEntity
    quantity: Int
}

input inp_CompositionO2OTestEntityFilterCondition {
    AND: [inp_CompositionO2OTestEntityFilterCondition]
    OR: [inp_CompositionO2OTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    nestedComposition: [inp_DeeplyNestedTestEntityFilterCondition]
    quantity: [inp_IntFilterCondition]
}

input inp_CompositionO2OTestEntityOrderBy {
    id: SortOrder
    name: [SortOrder]
    nestedComposition: inp_DeeplyNestedTestEntityOrderBy
    quantity: SortOrder
}

input inp_Customer {
    createdBy: String
    createdDate: DateTime
    deletedBy: String
    deletedDate: DateTime
    email: String
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    name: String
    version: Int
}

input inp_CustomerFilterCondition {
    AND: [inp_CustomerFilterCondition]
    OR: [inp_CustomerFilterCondition]
    "is null"
    _isNull: Boolean
    createdBy: [inp_StringFilterCondition]
    createdDate: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    deletedDate: [inp_DateTimeFilterCondition]
    email: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    lastModifiedBy: [inp_StringFilterCondition]
    lastModifiedDate: [inp_DateTimeFilterCondition]
    name: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_CustomerOrderBy {
    createdBy: [SortOrder]
    createdDate: SortOrder
    deletedBy: [SortOrder]
    deletedDate: SortOrder
    email: [SortOrder]
    id: SortOrder
    lastModifiedBy: [SortOrder]
    lastModifiedDate: SortOrder
    name: [SortOrder]
    version: SortOrder
}

input inp_DatatypesTestEntity {
    associationM2Mattr: [inp_AssociationM2MTestEntity]
    associationM2Oattr: inp_AssociationM2OTestEntity
    associationO2Mattr: [inp_AssociationO2MTestEntity]
    associationO2Oattr: inp_AssociationO2OTestEntity
    bigDecimalAttr: BigDecimal
    booleanAttr: Boolean
    compositionO2Mattr: [inp_CompositionO2MTestEntity]
    compositionO2Oattr: inp_CompositionO2OTestEntity
    dateAttr: Date
    dateTimeAttr: DateTime
    doubleAttr: Float
    enumAttr: TestEnum
    id: UUID
    integerAttr: Int
    integerIdTestEntityAssociationM2MAttr: [inp_IntegerIdTestEntity]
    localDateAttr: LocalDate
    localDateTimeAttr: LocalDateTime
    localTimeAttr: LocalTime
    longAttr: Long
    name: String
    offsetDateTimeAttr: OffsetDateTime
    offsetTimeAttr: OffsetTime
    stringAttr: String
    stringIdTestEntityAssociationM2O: inp_StringIdTestEntity
    stringIdTestEntityAssociationO2O: inp_StringIdTestEntity
    timeAttr: Time
    uuidAttr: UUID
}

input inp_DatatypesTestEntityFilterCondition {
    AND: [inp_DatatypesTestEntityFilterCondition]
    OR: [inp_DatatypesTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    associationM2Oattr: [inp_AssociationM2OTestEntityFilterCondition]
    associationO2Oattr: [inp_AssociationO2OTestEntityFilterCondition]
    bigDecimalAttr: [inp_BigDecimalFilterCondition]
    booleanAttr: [inp_BooleanFilterCondition]
    compositionO2Oattr: [inp_CompositionO2OTestEntityFilterCondition]
    dateAttr: [inp_DateFilterCondition]
    dateTimeAttr: [inp_DateTimeFilterCondition]
    doubleAttr: [inp_FloatFilterCondition]
    enumAttr: [String]
    id: [inp_UUIDFilterCondition]
    integerAttr: [inp_IntFilterCondition]
    localDateAttr: [inp_LocalDateFilterCondition]
    localDateTimeAttr: [inp_LocalDateTimeFilterCondition]
    localTimeAttr: [inp_LocalTimeFilterCondition]
    longAttr: [inp_LongFilterCondition]
    name: [inp_StringFilterCondition]
    offsetDateTimeAttr: [inp_OffsetDateTimeFilterCondition]
    offsetTimeAttr: [inp_OffsetTimeFilterCondition]
    stringAttr: [inp_StringFilterCondition]
    stringIdTestEntityAssociationM2O: [inp_StringIdTestEntityFilterCondition]
    stringIdTestEntityAssociationO2O: [inp_StringIdTestEntityFilterCondition]
    timeAttr: [inp_TimeFilterCondition]
    uuidAttr: [inp_UUIDFilterCondition]
}

input inp_DatatypesTestEntityOrderBy {
    associationM2Oattr: inp_AssociationM2OTestEntityOrderBy
    associationO2Oattr: inp_AssociationO2OTestEntityOrderBy
    bigDecimalAttr: SortOrder
    booleanAttr: SortOrder
    compositionO2Oattr: inp_CompositionO2OTestEntityOrderBy
    dateAttr: SortOrder
    dateTimeAttr: SortOrder
    doubleAttr: SortOrder
    enumAttr: [String]
    id: SortOrder
    integerAttr: SortOrder
    localDateAttr: SortOrder
    localDateTimeAttr: SortOrder
    localTimeAttr: SortOrder
    longAttr: SortOrder
    name: [SortOrder]
    offsetDateTimeAttr: SortOrder
    offsetTimeAttr: SortOrder
    stringAttr: [SortOrder]
    stringIdTestEntityAssociationM2O: inp_StringIdTestEntityOrderBy
    stringIdTestEntityAssociationO2O: inp_StringIdTestEntityOrderBy
    timeAttr: SortOrder
    uuidAttr: SortOrder
}

"expression to compare columns of type Date. All fields are combined with logical 'AND'"
input inp_DateFilterCondition {
    "equals"
    _eq: Date
    "greater than"
    _gt: Date
    "greater than or equals"
    _gte: Date
    "in list"
    _in: [Date]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Date
    "less than or equals"
    _lte: Date
    "not equals"
    _neq: Date
    "not in list"
    _notIn: [Date]
}

"expression to compare columns of type DateTime. All fields are combined with logical 'AND'"
input inp_DateTimeFilterCondition {
    "equals"
    _eq: DateTime
    "greater than"
    _gt: DateTime
    "greater than or equals"
    _gte: DateTime
    "in list"
    _in: [DateTime]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: DateTime
    "less than or equals"
    _lte: DateTime
    "not equals"
    _neq: DateTime
    "not in list"
    _notIn: [DateTime]
}

input inp_DeeplyNestedTestEntity {
    associationO2Oattr: inp_AssociationO2OTestEntity
    id: UUID
    name: String
}

input inp_DeeplyNestedTestEntityFilterCondition {
    AND: [inp_DeeplyNestedTestEntityFilterCondition]
    OR: [inp_DeeplyNestedTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    associationO2Oattr: [inp_AssociationO2OTestEntityFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
}

input inp_DeeplyNestedTestEntityOrderBy {
    associationO2Oattr: inp_AssociationO2OTestEntityOrderBy
    id: SortOrder
    name: [SortOrder]
}

"expression to compare columns of type Float. All fields are combined with logical 'AND'"
input inp_FloatFilterCondition {
    "equals"
    _eq: Float
    "greater than"
    _gt: Float
    "greater than or equals"
    _gte: Float
    "in list"
    _in: [Float]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Float
    "less than or equals"
    _lte: Float
    "not equals"
    _neq: Float
    "not in list"
    _notIn: [Float]
}

"expression to compare columns of type Int. All fields are combined with logical 'AND'"
input inp_IntFilterCondition {
    "equals"
    _eq: Int
    "greater than"
    _gt: Int
    "greater than or equals"
    _gte: Int
    "in list"
    _in: [Int]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Int
    "less than or equals"
    _lte: Int
    "not equals"
    _neq: Int
    "not in list"
    _notIn: [Int]
}

input inp_IntegerIdTestEntity {
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: Int
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_IntegerIdTestEntityFilterCondition {
    AND: [inp_IntegerIdTestEntityFilterCondition]
    OR: [inp_IntegerIdTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_IntFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_IntegerIdTestEntityOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    description: [SortOrder]
    id: SortOrder
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

"expression to compare columns of type LocalDate. All fields are combined with logical 'AND'"
input inp_LocalDateFilterCondition {
    "equals"
    _eq: LocalDate
    "greater than"
    _gt: LocalDate
    "greater than or equals"
    _gte: LocalDate
    "in list"
    _in: [LocalDate]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: LocalDate
    "less than or equals"
    _lte: LocalDate
    "not equals"
    _neq: LocalDate
    "not in list"
    _notIn: [LocalDate]
}

"expression to compare columns of type LocalDateTime. All fields are combined with logical 'AND'"
input inp_LocalDateTimeFilterCondition {
    "equals"
    _eq: LocalDateTime
    "greater than"
    _gt: LocalDateTime
    "greater than or equals"
    _gte: LocalDateTime
    "in list"
    _in: [LocalDateTime]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: LocalDateTime
    "less than or equals"
    _lte: LocalDateTime
    "not equals"
    _neq: LocalDateTime
    "not in list"
    _notIn: [LocalDateTime]
}

"expression to compare columns of type LocalTime. All fields are combined with logical 'AND'"
input inp_LocalTimeFilterCondition {
    "equals"
    _eq: LocalTime
    "greater than"
    _gt: LocalTime
    "greater than or equals"
    _gte: LocalTime
    "is null"
    _isNull: Boolean
    "less that"
    _lt: LocalTime
    "less than or equals"
    _lte: LocalTime
    "not equals"
    _neq: LocalTime
}

"expression to compare columns of type Long. All fields are combined with logical 'AND'"
input inp_LongFilterCondition {
    "equals"
    _eq: Long
    "greater than"
    _gt: Long
    "greater than or equals"
    _gte: Long
    "in list"
    _in: [Long]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Long
    "less than or equals"
    _lte: Long
    "not equals"
    _neq: Long
    "not in list"
    _notIn: [Long]
}

"expression to compare columns of type OffsetDateTime. All fields are combined with logical 'AND'"
input inp_OffsetDateTimeFilterCondition {
    "equals"
    _eq: OffsetDateTime
    "greater than"
    _gt: OffsetDateTime
    "greater than or equals"
    _gte: OffsetDateTime
    "in list"
    _in: [OffsetDateTime]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: OffsetDateTime
    "less than or equals"
    _lte: OffsetDateTime
    "not equals"
    _neq: OffsetDateTime
    "not in list"
    _notIn: [OffsetDateTime]
}

"expression to compare columns of type OffsetTime. All fields are combined with logical 'AND'"
input inp_OffsetTimeFilterCondition {
    "equals"
    _eq: OffsetTime
    "greater than"
    _gt: OffsetTime
    "greater than or equals"
    _gte: OffsetTime
    "is null"
    _isNull: Boolean
    "less that"
    _lt: OffsetTime
    "less than or equals"
    _lte: OffsetTime
    "not equals"
    _neq: OffsetTime
}

input inp_OrderLine {
    createdBy: String
    createdDate: DateTime
    deletedBy: String
    deletedDate: DateTime
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    order: inp_Order_
    product: inp_Product
    quantity: Int
    version: Int
}

input inp_OrderLineFilterCondition {
    AND: [inp_OrderLineFilterCondition]
    OR: [inp_OrderLineFilterCondition]
    "is null"
    _isNull: Boolean
    createdBy: [inp_StringFilterCondition]
    createdDate: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    deletedDate: [inp_DateTimeFilterCondition]
    id: [inp_UUIDFilterCondition]
    lastModifiedBy: [inp_StringFilterCondition]
    lastModifiedDate: [inp_DateTimeFilterCondition]
    order: [inp_Order_FilterCondition]
    product: [inp_ProductFilterCondition]
    quantity: [inp_IntFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_OrderLineOrderBy {
    createdBy: [SortOrder]
    createdDate: SortOrder
    deletedBy: [SortOrder]
    deletedDate: SortOrder
    id: SortOrder
    lastModifiedBy: [SortOrder]
    lastModifiedDate: SortOrder
    order: inp_Order_OrderBy
    product: inp_ProductOrderBy
    quantity: SortOrder
    version: SortOrder
}

input inp_Order_ {
    amount: BigDecimal
    createdBy: String
    createdDate: DateTime
    customer: inp_Customer
    date: Date
    deletedBy: String
    deletedDate: DateTime
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    lines: [inp_OrderLine]
    number: String
    numberOfSpecialProducts: Int
    version: Int
}

input inp_Order_FilterCondition {
    AND: [inp_Order_FilterCondition]
    OR: [inp_Order_FilterCondition]
    "is null"
    _isNull: Boolean
    amount: [inp_BigDecimalFilterCondition]
    createdBy: [inp_StringFilterCondition]
    createdDate: [inp_DateTimeFilterCondition]
    customer: [inp_CustomerFilterCondition]
    date: [inp_DateFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    deletedDate: [inp_DateTimeFilterCondition]
    id: [inp_UUIDFilterCondition]
    lastModifiedBy: [inp_StringFilterCondition]
    lastModifiedDate: [inp_DateTimeFilterCondition]
    number: [inp_StringFilterCondition]
    numberOfSpecialProducts: [inp_IntFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_Order_OrderBy {
    amount: SortOrder
    createdBy: [SortOrder]
    createdDate: SortOrder
    customer: inp_CustomerOrderBy
    date: SortOrder
    deletedBy: [SortOrder]
    deletedDate: SortOrder
    id: SortOrder
    lastModifiedBy: [SortOrder]
    lastModifiedDate: SortOrder
    number: [SortOrder]
    numberOfSpecialProducts: SortOrder
    version: SortOrder
}

input inp_Product {
    createdBy: String
    createdDate: DateTime
    deletedBy: String
    deletedDate: DateTime
    id: UUID
    lastModifiedBy: String
    lastModifiedDate: DateTime
    name: String
    price: BigDecimal
    special: Boolean
    version: Int
}

input inp_ProductFilterCondition {
    AND: [inp_ProductFilterCondition]
    OR: [inp_ProductFilterCondition]
    "is null"
    _isNull: Boolean
    createdBy: [inp_StringFilterCondition]
    createdDate: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    deletedDate: [inp_DateTimeFilterCondition]
    id: [inp_UUIDFilterCondition]
    lastModifiedBy: [inp_StringFilterCondition]
    lastModifiedDate: [inp_DateTimeFilterCondition]
    name: [inp_StringFilterCondition]
    price: [inp_BigDecimalFilterCondition]
    special: [inp_BooleanFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_ProductOrderBy {
    createdBy: [SortOrder]
    createdDate: SortOrder
    deletedBy: [SortOrder]
    deletedDate: SortOrder
    id: SortOrder
    lastModifiedBy: [SortOrder]
    lastModifiedDate: SortOrder
    name: [SortOrder]
    price: SortOrder
    special: SortOrder
    version: SortOrder
}

"expression to compare columns of type Short. All fields are combined with logical 'AND'"
input inp_ShortFilterCondition {
    "equals"
    _eq: Short
    "greater than"
    _gt: Short
    "greater than or equals"
    _gte: Short
    "in list"
    _in: [Short]
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Short
    "less than or equals"
    _lte: Short
    "not equals"
    _neq: Short
    "not in list"
    _notIn: [Short]
}

"expression to compare columns of type String. All fields are combined with logical 'AND'"
input inp_StringFilterCondition {
    "contains substring"
    _contains: String
    "ends with substring"
    _endsWith: String
    "equals"
    _eq: String
    "in list"
    _in: [String]
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: String
    "not contains substring"
    _notContains: String
    "not in list"
    _notIn: [String]
    "starts with substring"
    _startsWith: String
}

input inp_StringIdTestEntity {
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    identifier: String
    productCode: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_StringIdTestEntityFilterCondition {
    AND: [inp_StringIdTestEntityFilterCondition]
    OR: [inp_StringIdTestEntityFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    identifier: [inp_StringFilterCondition]
    productCode: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_StringIdTestEntityOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    description: [SortOrder]
    identifier: [SortOrder]
    productCode: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

"expression to compare columns of type Time. All fields are combined with logical 'AND'"
input inp_TimeFilterCondition {
    "equals"
    _eq: Time
    "greater than"
    _gt: Time
    "greater than or equals"
    _gte: Time
    "is null"
    _isNull: Boolean
    "less that"
    _lt: Time
    "less than or equals"
    _lte: Time
    "not equals"
    _neq: Time
}

"expression to compare columns of type UUID. All fields are combined with logical 'AND'"
input inp_UUIDFilterCondition {
    "equals"
    _eq: UUID
    "in list"
    _in: [UUID]
    "is null"
    _isNull: Boolean
    "not equals"
    _neq: UUID
    "not in list"
    _notIn: [UUID]
}

input inp_User {
    email: String
    enabled: Boolean
    firstName: String
    id: UUID
    lastName: String
    password: String
    username: String
    version: Int
}

input inp_UserFilterCondition {
    AND: [inp_UserFilterCondition]
    OR: [inp_UserFilterCondition]
    "is null"
    _isNull: Boolean
    email: [inp_StringFilterCondition]
    enabled: [inp_BooleanFilterCondition]
    firstName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    lastName: [inp_StringFilterCondition]
    password: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_UserOrderBy {
    email: [SortOrder]
    enabled: SortOrder
    firstName: [SortOrder]
    id: SortOrder
    lastName: [SortOrder]
    password: [SortOrder]
    username: [SortOrder]
    version: SortOrder
}

input inp_audit_EntityLog {
    attributes: [String]
    changes: String
    createTs: DateTime
    createdBy: String
    entity: String
    entityInstanceName: String
    entityRef: String
    eventTs: DateTime
    id: UUID
    sysTenantId: String
    type: Type
    username: String
}

input inp_audit_EntityLogFilterCondition {
    AND: [inp_audit_EntityLogFilterCondition]
    OR: [inp_audit_EntityLogFilterCondition]
    "is null"
    _isNull: Boolean
    changes: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    entity: [inp_StringFilterCondition]
    entityInstanceName: [inp_StringFilterCondition]
    entityRef: [inp_StringFilterCondition]
    eventTs: [inp_DateTimeFilterCondition]
    id: [inp_UUIDFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    type: [String]
    username: [inp_StringFilterCondition]
}

input inp_audit_EntityLogOrderBy {
    changes: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    entity: [SortOrder]
    entityInstanceName: [SortOrder]
    eventTs: SortOrder
    id: SortOrder
    sysTenantId: [SortOrder]
    type: [String]
    username: [SortOrder]
}

input inp_audit_EntitySnapshot {
    authorUsername: String
    createdBy: String
    createdDate: DateTime
    entity: String
    entityMetaClass: String
    fetchPlanXml: String
    id: UUID
    snapshotDate: DateTime
    snapshotXml: String
    sysTenantId: String
}

input inp_audit_EntitySnapshotFilterCondition {
    AND: [inp_audit_EntitySnapshotFilterCondition]
    OR: [inp_audit_EntitySnapshotFilterCondition]
    "is null"
    _isNull: Boolean
    authorUsername: [inp_StringFilterCondition]
    createdBy: [inp_StringFilterCondition]
    createdDate: [inp_DateTimeFilterCondition]
    entity: [inp_StringFilterCondition]
    entityMetaClass: [inp_StringFilterCondition]
    fetchPlanXml: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    snapshotDate: [inp_DateTimeFilterCondition]
    snapshotXml: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
}

input inp_audit_EntitySnapshotOrderBy {
    authorUsername: [SortOrder]
    createdBy: [SortOrder]
    createdDate: SortOrder
    entityMetaClass: [SortOrder]
    fetchPlanXml: [SortOrder]
    id: SortOrder
    snapshotDate: SortOrder
    snapshotXml: [SortOrder]
    sysTenantId: [SortOrder]
}

input inp_audit_LoggedAttribute {
    createTs: DateTime
    createdBy: String
    entity: inp_audit_LoggedEntity
    id: UUID
    name: String
}

input inp_audit_LoggedAttributeFilterCondition {
    AND: [inp_audit_LoggedAttributeFilterCondition]
    OR: [inp_audit_LoggedAttributeFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    entity: [inp_audit_LoggedEntityFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
}

input inp_audit_LoggedAttributeOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    entity: inp_audit_LoggedEntityOrderBy
    id: SortOrder
    name: [SortOrder]
}

input inp_audit_LoggedEntity {
    attributes: [inp_audit_LoggedAttribute]
    auto: Boolean
    createTs: DateTime
    createdBy: String
    id: UUID
    manual: Boolean
    name: String
}

input inp_audit_LoggedEntityFilterCondition {
    AND: [inp_audit_LoggedEntityFilterCondition]
    OR: [inp_audit_LoggedEntityFilterCondition]
    "is null"
    _isNull: Boolean
    auto: [inp_BooleanFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    manual: [inp_BooleanFilterCondition]
    name: [inp_StringFilterCondition]
}

input inp_audit_LoggedEntityOrderBy {
    auto: SortOrder
    createTs: SortOrder
    createdBy: [SortOrder]
    id: SortOrder
    manual: SortOrder
    name: [SortOrder]
}

input inp_sec_ResourcePolicyEntity {
    action: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    effect: String
    id: UUID
    policyGroup: String
    resource: String
    role: inp_sec_ResourceRoleEntity
    type: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_sec_ResourcePolicyEntityFilterCondition {
    AND: [inp_sec_ResourcePolicyEntityFilterCondition]
    OR: [inp_sec_ResourcePolicyEntityFilterCondition]
    "is null"
    _isNull: Boolean
    action: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    effect: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    policyGroup: [inp_StringFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_sec_ResourceRoleEntityFilterCondition]
    type: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_ResourcePolicyEntityOrderBy {
    action: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    effect: [SortOrder]
    id: SortOrder
    policyGroup: [SortOrder]
    resource: [SortOrder]
    role: inp_sec_ResourceRoleEntityOrderBy
    type: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

input inp_sec_ResourceRoleEntity {
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    resourcePolicies: [inp_sec_ResourcePolicyEntity]
    scopes: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_sec_ResourceRoleEntityFilterCondition {
    AND: [inp_sec_ResourceRoleEntityFilterCondition]
    OR: [inp_sec_ResourceRoleEntityFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    scopes: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_ResourceRoleEntityOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    description: [SortOrder]
    id: SortOrder
    name: [SortOrder]
    scopes: [SortOrder]
    sysTenantId: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

input inp_sec_RoleAssignmentEntity {
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    id: UUID
    roleCode: String
    roleType: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

input inp_sec_RoleAssignmentEntityFilterCondition {
    AND: [inp_sec_RoleAssignmentEntityFilterCondition]
    OR: [inp_sec_RoleAssignmentEntityFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    roleCode: [inp_StringFilterCondition]
    roleType: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_RoleAssignmentEntityOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    id: SortOrder
    roleCode: [SortOrder]
    roleType: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    username: [SortOrder]
    version: SortOrder
}

input inp_sec_RowLevelPolicyEntity {
    action: RowLevelPolicyAction
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    entityName: String
    id: UUID
    joinClause: String
    role: inp_sec_RowLevelRoleEntity
    script: String
    type: RowLevelPolicyType
    updateTs: DateTime
    updatedBy: String
    version: Int
    whereClause: String
}

input inp_sec_RowLevelPolicyEntityFilterCondition {
    AND: [inp_sec_RowLevelPolicyEntityFilterCondition]
    OR: [inp_sec_RowLevelPolicyEntityFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    joinClause: [inp_StringFilterCondition]
    role: [inp_sec_RowLevelRoleEntityFilterCondition]
    script: [inp_StringFilterCondition]
    type: [String]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
    whereClause: [inp_StringFilterCondition]
}

input inp_sec_RowLevelPolicyEntityOrderBy {
    action: [String]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    entityName: [SortOrder]
    id: SortOrder
    joinClause: [SortOrder]
    role: inp_sec_RowLevelRoleEntityOrderBy
    script: [SortOrder]
    type: [String]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
    whereClause: [SortOrder]
}

input inp_sec_RowLevelRoleEntity {
    childRoles: String
    code: String
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    description: String
    id: UUID
    name: String
    rowLevelPolicies: [inp_sec_RowLevelPolicyEntity]
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    version: Int
}

input inp_sec_RowLevelRoleEntityFilterCondition {
    AND: [inp_sec_RowLevelRoleEntityFilterCondition]
    OR: [inp_sec_RowLevelRoleEntityFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_RowLevelRoleEntityOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    description: [SortOrder]
    id: SortOrder
    name: [SortOrder]
    sysTenantId: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    version: SortOrder
}

input inp_sec_UserSubstitutionEntity {
    createTs: DateTime
    createdBy: String
    deleteTs: DateTime
    deletedBy: String
    endDate: Date
    id: UUID
    startDate: Date
    substitutedUsername: String
    updateTs: DateTime
    updatedBy: String
    username: String
    version: Int
}

input inp_sec_UserSubstitutionEntityFilterCondition {
    AND: [inp_sec_UserSubstitutionEntityFilterCondition]
    OR: [inp_sec_UserSubstitutionEntityFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    deleteTs: [inp_DateTimeFilterCondition]
    deletedBy: [inp_StringFilterCondition]
    endDate: [inp_DateFilterCondition]
    id: [inp_UUIDFilterCondition]
    startDate: [inp_DateFilterCondition]
    substitutedUsername: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_sec_UserSubstitutionEntityOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    deleteTs: SortOrder
    deletedBy: [SortOrder]
    endDate: SortOrder
    id: SortOrder
    startDate: SortOrder
    substitutedUsername: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    username: [SortOrder]
    version: SortOrder
}

input inp_ui_FilterConfiguration {
    componentId: String
    configurationId: String
    defaultForAll: Boolean
    defaultForMe: Boolean
    id: UUID
    name: String
    rootCondition: String
    sysTenantId: String
    username: String
}

input inp_ui_FilterConfigurationFilterCondition {
    AND: [inp_ui_FilterConfigurationFilterCondition]
    OR: [inp_ui_FilterConfigurationFilterCondition]
    "is null"
    _isNull: Boolean
    componentId: [inp_StringFilterCondition]
    configurationId: [inp_StringFilterCondition]
    defaultForAll: [inp_BooleanFilterCondition]
    defaultForMe: [inp_BooleanFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    rootCondition: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
}

input inp_ui_FilterConfigurationOrderBy {
    componentId: [SortOrder]
    configurationId: [SortOrder]
    defaultForAll: SortOrder
    defaultForMe: SortOrder
    id: SortOrder
    name: [SortOrder]
    sysTenantId: [SortOrder]
    username: [SortOrder]
}

input inp_ui_Setting {
    createTs: DateTime
    createdBy: String
    id: UUID
    name: String
    username: String
    value: String
}

input inp_ui_SettingFilterCondition {
    AND: [inp_ui_SettingFilterCondition]
    OR: [inp_ui_SettingFilterCondition]
    "is null"
    _isNull: Boolean
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    name: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    value: [inp_StringFilterCondition]
}

input inp_ui_SettingOrderBy {
    createTs: SortOrder
    createdBy: [SortOrder]
    id: SortOrder
    name: [SortOrder]
    username: [SortOrder]
    value: [SortOrder]
}

input inp_ui_TablePresentation {
    autoSave: Boolean
    componentId: String
    createTs: DateTime
    createdBy: String
    id: UUID
    isDefault: Boolean
    name: String
    settings: String
    sysTenantId: String
    updateTs: DateTime
    updatedBy: String
    username: String
}

input inp_ui_TablePresentationFilterCondition {
    AND: [inp_ui_TablePresentationFilterCondition]
    OR: [inp_ui_TablePresentationFilterCondition]
    "is null"
    _isNull: Boolean
    autoSave: [inp_BooleanFilterCondition]
    componentId: [inp_StringFilterCondition]
    createTs: [inp_DateTimeFilterCondition]
    createdBy: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    isDefault: [inp_BooleanFilterCondition]
    name: [inp_StringFilterCondition]
    settings: [inp_StringFilterCondition]
    sysTenantId: [inp_StringFilterCondition]
    updateTs: [inp_DateTimeFilterCondition]
    updatedBy: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
}

input inp_ui_TablePresentationOrderBy {
    autoSave: SortOrder
    componentId: [SortOrder]
    createTs: SortOrder
    createdBy: [SortOrder]
    id: SortOrder
    isDefault: SortOrder
    name: [SortOrder]
    settings: [SortOrder]
    sysTenantId: [SortOrder]
    updateTs: SortOrder
    updatedBy: [SortOrder]
    username: [SortOrder]
}

input inp_umgmt_EntityAttributePolicy {
    action: AttributePolicyType
    attribute: String
    entityName: String
    id: UUID
    readOnly: Boolean
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_EntityAttributePolicyFilterCondition {
    AND: [inp_umgmt_EntityAttributePolicyFilterCondition]
    OR: [inp_umgmt_EntityAttributePolicyFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    attribute: [inp_StringFilterCondition]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_EntityAttributePolicyOrderBy {
    action: [String]
    attribute: [SortOrder]
    entityName: [SortOrder]
    id: SortOrder
    readOnly: SortOrder
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_EntityPolicy {
    action: EntityPolicyType
    entityName: String
    id: UUID
    readOnly: Boolean
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_EntityPolicyFilterCondition {
    AND: [inp_umgmt_EntityPolicyFilterCondition]
    OR: [inp_umgmt_EntityPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_EntityPolicyOrderBy {
    action: [String]
    entityName: [SortOrder]
    id: SortOrder
    readOnly: SortOrder
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_MenuPolicy {
    id: UUID
    readOnly: Boolean
    resource: String
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_MenuPolicyFilterCondition {
    AND: [inp_umgmt_MenuPolicyFilterCondition]
    OR: [inp_umgmt_MenuPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_MenuPolicyOrderBy {
    id: SortOrder
    readOnly: SortOrder
    resource: [SortOrder]
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_ResourceRole {
    childRoles: String
    code: String
    description: String
    entityAttributePolicies: [inp_umgmt_EntityAttributePolicy]
    entityPolicies: [inp_umgmt_EntityPolicy]
    id: String
    menuPolicies: [inp_umgmt_MenuPolicy]
    name: String
    readOnly: Boolean
    scopes: String
    screenPolicies: [inp_umgmt_ScreenPolicy]
    specificPolicies: [inp_umgmt_SpecificPolicy]
    version: Int
}

input inp_umgmt_ResourceRoleFilterCondition {
    AND: [inp_umgmt_ResourceRoleFilterCondition]
    OR: [inp_umgmt_ResourceRoleFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_StringFilterCondition]
    name: [inp_StringFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    scopes: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_ResourceRoleOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    description: [SortOrder]
    id: [SortOrder]
    name: [SortOrder]
    readOnly: SortOrder
    scopes: [SortOrder]
    version: SortOrder
}

input inp_umgmt_RowLevelPolicy {
    action: RowLevelAction
    entityName: String
    id: UUID
    joinClause: String
    readOnly: Boolean
    role: inp_umgmt_RowLevelRole
    script: String
    type: RowLevelType
    version: Int
    whereClause: String
}

input inp_umgmt_RowLevelPolicyFilterCondition {
    AND: [inp_umgmt_RowLevelPolicyFilterCondition]
    OR: [inp_umgmt_RowLevelPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    action: [String]
    entityName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    joinClause: [inp_StringFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    role: [inp_umgmt_RowLevelRoleFilterCondition]
    script: [inp_StringFilterCondition]
    type: [String]
    version: [inp_IntFilterCondition]
    whereClause: [inp_StringFilterCondition]
}

input inp_umgmt_RowLevelPolicyOrderBy {
    action: [String]
    entityName: [SortOrder]
    id: SortOrder
    joinClause: [SortOrder]
    readOnly: SortOrder
    role: inp_umgmt_RowLevelRoleOrderBy
    script: [SortOrder]
    type: [String]
    version: SortOrder
    whereClause: [SortOrder]
}

input inp_umgmt_RowLevelRole {
    childRoles: String
    code: String
    description: String
    id: String
    name: String
    readOnly: Boolean
    rowLevelPolicies: [inp_umgmt_RowLevelPolicy]
    version: Int
}

input inp_umgmt_RowLevelRoleFilterCondition {
    AND: [inp_umgmt_RowLevelRoleFilterCondition]
    OR: [inp_umgmt_RowLevelRoleFilterCondition]
    "is null"
    _isNull: Boolean
    childRoles: [inp_StringFilterCondition]
    code: [inp_StringFilterCondition]
    description: [inp_StringFilterCondition]
    id: [inp_StringFilterCondition]
    name: [inp_StringFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_RowLevelRoleOrderBy {
    childRoles: [SortOrder]
    code: [SortOrder]
    description: [SortOrder]
    id: [SortOrder]
    name: [SortOrder]
    readOnly: SortOrder
    version: SortOrder
}

input inp_umgmt_ScreenPolicy {
    id: UUID
    readOnly: Boolean
    resource: String
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_ScreenPolicyFilterCondition {
    AND: [inp_umgmt_ScreenPolicyFilterCondition]
    OR: [inp_umgmt_ScreenPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_ScreenPolicyOrderBy {
    id: SortOrder
    readOnly: SortOrder
    resource: [SortOrder]
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_SpecificPolicy {
    id: UUID
    readOnly: Boolean
    resource: String
    role: inp_umgmt_ResourceRole
    version: Int
}

input inp_umgmt_SpecificPolicyFilterCondition {
    AND: [inp_umgmt_SpecificPolicyFilterCondition]
    OR: [inp_umgmt_SpecificPolicyFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_UUIDFilterCondition]
    readOnly: [inp_BooleanFilterCondition]
    resource: [inp_StringFilterCondition]
    role: [inp_umgmt_ResourceRoleFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_SpecificPolicyOrderBy {
    id: SortOrder
    readOnly: SortOrder
    resource: [SortOrder]
    role: inp_umgmt_ResourceRoleOrderBy
    version: SortOrder
}

input inp_umgmt_User {
    active: Boolean
    email: String
    firstName: String
    id: UUID
    lastName: String
    password: String
    timeZoneId: String
    username: String
    version: Int
}

input inp_umgmt_UserFilterCondition {
    AND: [inp_umgmt_UserFilterCondition]
    OR: [inp_umgmt_UserFilterCondition]
    "is null"
    _isNull: Boolean
    active: [inp_BooleanFilterCondition]
    email: [inp_StringFilterCondition]
    firstName: [inp_StringFilterCondition]
    id: [inp_UUIDFilterCondition]
    lastName: [inp_StringFilterCondition]
    password: [inp_StringFilterCondition]
    timeZoneId: [inp_StringFilterCondition]
    username: [inp_StringFilterCondition]
    version: [inp_IntFilterCondition]
}

input inp_umgmt_UserOrderBy {
    active: SortOrder
    email: [SortOrder]
    firstName: [SortOrder]
    id: SortOrder
    lastName: [SortOrder]
    password: [SortOrder]
    timeZoneId: [SortOrder]
    username: [SortOrder]
    version: SortOrder
}

input inp_umgmt_UserRoleAssignments {
    id: String
    resourceRoles: [inp_umgmt_ResourceRole]
    rowLevelRoles: [inp_umgmt_RowLevelRole]
}

input inp_umgmt_UserRoleAssignmentsFilterCondition {
    AND: [inp_umgmt_UserRoleAssignmentsFilterCondition]
    OR: [inp_umgmt_UserRoleAssignmentsFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_StringFilterCondition]
}

input inp_umgmt_UserRoleAssignmentsOrderBy {
    id: [SortOrder]
}

input inp_umgmt_UserSession {
    id: String
    lastRequest: DateTime
    username: String
}

input inp_umgmt_UserSessionFilterCondition {
    AND: [inp_umgmt_UserSessionFilterCondition]
    OR: [inp_umgmt_UserSessionFilterCondition]
    "is null"
    _isNull: Boolean
    id: [inp_StringFilterCondition]
    lastRequest: [inp_DateTimeFilterCondition]
    username: [inp_StringFilterCondition]
}

input inp_umgmt_UserSessionOrderBy {
    id: [SortOrder]
    lastRequest: SortOrder
    username: [SortOrder]
}
